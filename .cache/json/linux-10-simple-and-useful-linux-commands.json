{
    "data": {
        "markdownRemark": {
            "html": "<h1>10 Simple and Useful Linux Commands</h1>\n<p>The commands listed here are basic, and will help you get started quickly. But they’re also powerful, and they’ll continue to be useful as your Linux expertise expands.</p>\n<ol>\n<li><code>echo</code> This takes the text you give it and sends it somewhere—to back to the screen, to a file, or to another command. Example: <code>echo \"hello!\"</code></li>\n<li><code>cat</code> To display the contents of a text file, just type <code>cat myfile</code>.</li>\n<li><code>find</code> It does what it says, and it’s good at it. Use it to locate files by path, size, date, owner and a bunch of other useful filters. Example: <code>find . -type f -mtime -1h # List files in this directory modified in the past hour</code>.</li>\n<li><code>date</code> Just type date when you want to know what time it is. Example: <code>date \"+It's %l:%m%p on %A\"</code>. Use it in a script to name files according to the current date.</li>\n<li><code>ls</code> What’s in this directory? Combine <code>ls</code> with some useful flags to display and sort directory contents by date and size. It also gives you lots of options for formatting the output.</li>\n<li><code>pwd</code> Where am I? Linux can be unforgiving, particularly when you delete something. Make sure you know are before you issue your commands.</li>\n<li><code>mail</code> Linux’s mail program isn’t good looking, but it can be really helpful. You can create a message and add text, recipients, and attachments all in one command. Example: <code>echo \"We're having a great time.\" | mail -s \"Wish you were here!\" -A postcard.png -t mom@example.com</code></li>\n<li><code>cut</code> When you have a string with separators in it, use <code>cut</code> to filter out certain fields. Example: <code>echo \"this, that, and the other\" | cut -d, -f2 # \"that\"</code></li>\n<li><code>grep</code> To find lines of text that contain a certain string, use grep. Example: <code>grep 'root' /etc/passwd # root:x:0:0:root:/root:/bin/bash</code></li>\n<li><code>sed</code> Use sed to find and change a substring in a piece of text. Example: <code>echo \"this, that, and the other\" | sed 's/that/those/' # \"this, those, and the other\"</code></li>\n</ol>\n<p>Use these commands in scripts and at the command line. They’re all very powerful commands, and Linux’s man page has a lot more information about each one.</p>",
            "fields": {
                "slug": "/linux/10-simple-and-useful-linux-commands/"
            },
            "frontmatter": {
                "title": "10 Simple and Useful Linux Commands"
            }
        }
    },
    "pathContext": {
        "slug": "/linux/10-simple-and-useful-linux-commands/"
    }
}